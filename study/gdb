gdb -p <pid>
ctrl+c

gdb 
file <executable-file>
break main 
run <args>


backtrace (또는 bt): 현재 스택 프레임을 보여줍니다 (함수 호출 스택).
frame <프레임_번호>: 특정 스택 프레임으로 이동합니다.
next (또는 n): 현재 라인을 실행하고 다음 라인으로 이동합니다 (함수 호출은 건너뜁니다).
step (또는 s): 현재 라인을 실행하고 함수 호출 내부로 들어갑니다.
print <변수_이름> (또는 p): 변수의 현재 값을 출력합니다.
break <함수_이름> 또는 break <파일_이름>:<라인_번호> (또는 b): 특정 함수나 코드 라인에 중단점을 설정합니다.
    break break test.c:200 if strcmp(input_string, "error") == 0 ; 어떤 변수에 특정문자열이 들어왔을때
continue (또는 c): 중단된 프로세스를 다시 실행합니다.

info locals: 현재 스택 프레임의 지역 변수 값을 출력합니다.
info args: 현재 함수의 인자 값을 출력합니다.

quit (또는 q): GDB를 종료하고 디버깅 세션을 끝냅니다. 
(기본적으로 디버깅 중인 프로세스는 계속 실행됩니다. GDB 종료 시 프로세스를 종료하려면 detach 전에 kill 명령어를 사용하거나 GDB 시작 시 옵션을 설정해야 합니다.)
detach: GDB에서 디버깅 중인 프로세스를 분리하고 계속 실행하도록 합니다. GDB는 종료됩니다.

어떤 변수에 특정문자열이 들어왔을때 break
break <위치> if <조건>
break <파일_이름>:<라인_번호> if strcmp(변수_이름, "찾을_문자열") == 0
break test.c:200 if strcmp(input_string, "error") == 0

info break
disable 1.2 # disable break point


lscpu


#define _GNU_SOURCE
#include <sched.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>

int main() {
    int cpu_count = sysconf(_SC_NPROCESSORS_ONLN);
    printf("CPU Cores Available: %d\n", cpu_count);

    int num_children = 4;  // 자식 프로세스 개수
    for (int i = 0; i < num_children; i++) {
        pid_t pid = fork();

        if (pid < 0) {
            perror("fork failed");
            exit(1);
        }

        if (pid == 0) {  // Child process
            cpu_set_t mask;
            CPU_ZERO(&mask);
            int core = i % cpu_count;  // 코어를 순환할당
            CPU_SET(core, &mask);

            if (sched_setaffinity(0, sizeof(mask), &mask) == -1) {
                perror("sched_setaffinity");
                exit(1);
            }

            printf("Child %d (PID: %d) assigned to CPU %d\n", i, getpid(), core);

            // Child's work
            while (1) {
                printf("Child %d running on CPU %d\n", i, core);
                sleep(1);
            }

            exit(0);
        }
    }

    // Parent process waits for children
    for (int i = 0; i < num_children; i++) {
        wait(NULL);
    }

    return 0;
}
